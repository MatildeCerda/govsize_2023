tr_pop
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 12, face = "bold"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="",
title = "Población total",
subtitle = "Habitantes",
caption = "Fuente: Elaboración y cálculos propios con base en datos de INIDE")
tr_pop
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="",
title = "Población total",
subtitle = "Habitantes",
caption = "Fuente: Elaboración y cálculos propios con base en datos de INIDE")
tr_pop
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 14, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="",
title = "Población total",
subtitle = "Habitantes",
caption = "Fuente: Elaboración y cálculos propios con base en datos de INIDE")
tr_pop
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="",
title = "Población total",
subtitle = "Habitantes",
caption = "Fuente: Elaboración y cálculos propios con base en datos de INIDE")
tr_pop
ggsave("population.png", width=10, height =7 , units= c("cm"), dpi=500)
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="",
title = "",
subtitle = "",
caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.yearqtr(date,           # Convert dates to quarterly
format = "%Y-%m-%d"), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")+
scale_x_date(date_labels = "%b/%Y")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")+
scale_x_date(date_labels = "%Q/%Y")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")+
scale_x_date(date_labels = "%q/%Y")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
?strptime
raw_data$date <- as.yearqtr(raw_data$date,           # Convert dates to quarterly
format = "%Y-%m-%d")
View(raw_data)
tr_pop_2 <- ggplot(raw_data, aes(x = date, y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = date, y = pop)) +
geom_line()
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = date, y = pop)) +
geom_line()
theme_classic()+
#  theme(plot.caption = element_text(hjust = 0),
#       plot.title.position = "plot",
#      plot.title = element_text(color = "black", size = 14, face = "bold"),
#     plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
#    plot.caption.position = "plot",
#)+
ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme_bw(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
#ggtitle("Población")+
labs(x="",
y="")
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_breaks = "months" , date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_breaks = "years" , date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_breaks = "years" , date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=45, hjust = 1)
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_breaks = "years" , date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
("population_sin_titulo.png", width=10, height =7 , units= c("cm"), dpi=500)
ggsave("population_sin_titulo.png", width=10, height =7 , units= c("cm"), dpi=500)
?scale_x_date
?plotmath
seas_plot1 <- ggplot(df_seas, aes(x = date, y = df_seas[,2])) +
geom_line() +
scale_x_date(date_breaks = "years" , date_labels = "%b %Y",date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Producto Interno Bruto Per Capita")+
labs(x="",y="")
validacion_pop <- data_frame(raw_data$date, raw_data$pop, raw_data2$RAW_POP)
raw_data <- raw_data %>%
mutate(
gdp_pc = gdp/pop,
gov_gdp = (gov_con + pub_inv)/gdp,
gov_con_gdp = gov_con/gdp,
pub_inv_gdp= pub_inv/gdp,
priv_inv_gdp = priv_inv/gdp,
tr_op = (x+m)/gdp,
)
raw_data <- raw_data %>%
mutate(
growth_gdp_pc = gdp_pc/lag(gdp_pc)-1
)
#create dummies
raw_data <- raw_data %>%
mutate(
d_2008 = ifelse(date >= "2008-7-1" & date <= "2009-4-1" ,1,0)
)
raw_data <- raw_data %>%
mutate(
d_2018 = ifelse(date >= "2017-10-1",1,0)
)
#Time series set
ts_vars <- ts(data = raw_data[,10:ncol(raw_data)],
start = c(2006,1),
frequency = 4
)
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
raw_plot1 <- ggplot(df, aes(x = date, y = df$gdp_pc)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot2 <- ggplot(df, aes(x = date, y = df$gov_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot3 <- ggplot(df, aes(x = date, y = df$gov_con_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot4 <- ggplot(df, aes(x = date, y = df$pub_inv_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot5 <- ggplot(df, aes(x = date, y = df$priv_inv_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot6 <- ggplot(df, aes(x = date, y =  df$tr_op)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
combined_plot_raw <- ggarrange(raw_plot1,
raw_plot2,
raw_plot3,
raw_plot4,
raw_plot5,
raw_plot6,
nrow = 2,
ncol = 3) #nrow & ncol depend on how you want to #organize your plots
df$date<-as.Date(df$date,  "%m/%d/%y")
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
View(raw_data)
library(writexl)#para exportar el excel
library(vars)
library(forecast)#for lag selection VAR
library(tidyverse)#manipulation de datos en general
library(xtable)#para tablas de latex
library(cointReg)#para FMOLS
library(urca)#para test de Johansen
library(dplyr)#manipulacion de datos en general
library(googlesheets4)#para importar de G. Drive
library(TSstudio)
library(patchwork)#para combinar graficos en una imagen
library(zoo)#funciones de series de tiempo
library(seasonal)#Para desestacionalizar
library(TSstudio)#PAra desestacionalizar
library(ggpubr)
library(patchwork) # para combinar graficos
library(aTSA)
library(broom)
library(dplyr)
library(stargazer)
library(vars)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
