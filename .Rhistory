#Investigacion: Impacto del tamano del Gobierno en el crecimiento Economico
setwd('/Users/axelcanales/Documents/GitHub/govsize_2023')
#Investigacion: Impacto del tamano del Gobierno en el crecimiento Economico
#Fecha: Julio 4, 2023
#Workind directory
setwd('/Users/axelcanales/Documents/GitHub/govsize_2023')
#Packages
install.packages("googlesheets4")
library("googlesheets4")
library(googlesheets4)
help("read_sheet")
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = RAW_DATA,
col_names = TRUE,
range = "A1:H65"
)
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing")
rlang::last_trace()
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
#Investigacion: Impacto del tamano del Gobierno en el crecimiento Economico
#Fecha: Julio 4, 2023
#Workind directory
setwd('/Users/axelcanales/Documents/GitHub/govsize_2023')
#Packages
install.packages("googlesheets4")
library(googlesheets4)
#Importar data (Euler)
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
install.packages("googlesheets4")
library(googlesheets4)
#Importar data (Euler)
read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
View(raw_data)
raw_Data <- raw_data %>%
rename(
"gdp" = "RAW_GDP"
)
library(dplyr)
raw_Data <- raw_data %>%
rename(
"gdp" = "RAW_GDP"
)
View(raw_Data)
raw_data <- raw_data %>%
rename(
"DATE" = "date",
"gdp" = "RAW_GDP".
View(raw_data)
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"pub_inv"="RAW_PUB_INV",
"priv_inv"="RAW_PRIV_INV",
"x"="RAW_X",
"m"="RAW_M",
"pop" = "RAW_POP"
)
View(raw_data)
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
View(raw_data)
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
View(raw_Data)
rm(raw_Data)
rm(list = ls())
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
#Workind directory
setwd('/Users/axelcanales/Documents/GitHub/govsize_2023')
#Investigacion: Impacto del tamano del Gobierno en el crecimiento Economico
#Fecha: Julio 4, 2023
#CLEAR
rm(list = ls())
#Workind directory
setwd('/Users/axelcanales/Documents/GitHub/govsize_2023')
#Packages
#install.packages("googlesheets4")
library(dplyr)
library(googlesheets4)
#Importar data (Euler)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
#Limpieza datos (Euler)
#rescale variables from BCN to millions of cords
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
#variables <- c(gdp, gov_con, pub_inv, priv_inv, x, m)
#raw_Data <- raw_data %>%
# mutate(
#       )
#Backast (Tony Stark)
#Desestacionalizacion (Done)
#Estacionariedad (Tony Stark)
#Incluye montar la tabla y exportarla a codigo latex
#Criterio de seleccion de rezagos Gasto Agregado (Tony Stark)
#Criterio de seleccion de rezagos Inversion Fija Publica (Tony Stark)
#Prueba de presedencia temporal Gasto Agregado  (Tony Stark)
#Prueba de presedencia temporal Inversion Fija Publica (Tony Stark)
#Prueba de cointegracion (Euler)
#Ecuacion de largo plazo Gasto Agregado (Tony Stark)
#Ecuacion de largo plazo Inversion Fija (Euler)
#Estimacion del tamano optiomo (Euler)
#Bootstrap (Together but Tony Stark leading)
View(raw_data)
raw_data <- raw_data %>%
mutate(
var_names_bcn = var_names_bcn*10^6
)
var_names_bcn <- c(gdp, gov_con, pub_inv, priv_inv, x, m)
var_names_bcn <- c("gdp", "gov_con", "pub_inv", "priv_inv", "x", "m")
raw_data <- raw_data %>%
mutate(
var_names_bcn = var_names_bcn*10^6
)
View(raw_data)
View(raw_data)
View(raw_data)
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6
)
var_names_bcn <- c("date", "gdp", "gov_con", "pub_inv", "priv_inv", "x", "m", "pop")
#Investigacion: Impacto del tamano del Gobierno en el crecimiento Economico
#Fecha: Julio 4, 2023
#CLEAR
rm(list = ls())
#Workind directory
setwd('/Users/axelcanales/Documents/GitHub/govsize_2023')
#Packages
#install.packages("googlesheets4")
library(dplyr)
library(googlesheets4)
#Importar data (Euler)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA2",
col_names = TRUE,
range = "A1:H65"
)
#Limpieza datos (Euler)
#rename
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
var_names_bcn <- c("date", "gdp", "gov_con", "pub_inv", "priv_inv", "x", "m", "pop")
#rescale variables from BCN to millions of cords
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6
)
#Backast (Tony Stark)
#Variables as share of PIB per capita
#Time series set
#ts_var <- ts(raw_data, frequency=3, start=c(1946,1))
#create dummies
#Desestacionalizacion (Done)
#Estacionariedad (Tony Stark)
#Incluye montar la tabla y exportarla a codigo latex
#Criterio de seleccion de rezagos Gasto Agregado (Tony Stark)
#Criterio de seleccion de rezagos Inversion Fija Publica (Tony Stark)
#Prueba de presedencia temporal Gasto Agregado  (Tony Stark)
#Prueba de presedencia temporal Inversion Fija Publica (Tony Stark)
#Prueba de cointegracion (Euler)
#Ecuacion de largo plazo Gasto Agregado (Tony Stark)
#Ecuacion de largo plazo Inversion Fija (Euler)
#Estimacion del tamano optiomo (Euler)
#Bootstrap (Together but Tony Stark leading)
View(raw_data)
raw_data <- raw_data %>%
mutate(
gdp_pc = gdp/pop,
gov_gdp = (gov_con + pub_inv)/gdp,
gov_con_gdp = gov_con/gdp,
pub_inv_gdp= pub_inv/gdp,
priv_inv_gdp = priv_inv/gdp,
tr_op = (x+m)/gdp,
)
View(raw_data)
ts_vars <- ts(data = raw_data[],
start = c(2006,1),
frequency = 4
)
View(ts_vars)
View(ts_vars)
View(ts_vars)
rm(ts_vars)
ts_vars <- ts(data = raw_data[2,14],
start = c(2006,1),
frequency = 4
)
View(raw_data)
ts_vars
rm(ts_vars)
ts_vars <- ts(data = raw_data[,2:14],
start = c(2006,1),
frequency = 4
)
View(ts_vars)
View(ts_vars)
print date
ts_vars <- ts(data = raw_data,
start = c(2006,1),
frequency = 4
)
View(ts_vars)
ts_vars$date <- as.yearqtr(ts_vars$date,           # Convert dates to quarterly
format = "%Y-%m-%d")
library(lubridate)
ts_vars$date <- as.yearqtr(ts_vars$date,           # Convert dates to quarterly
format = "%Y-%m-%d")
install.packages("TimeSeries")
install.packages("timeSeries")
library(timeSeries)
ts_vars$date <- as.yearqtr(ts_vars$date,           # Convert dates to quarterly
format = "%Y-%m-%d")
detach("package:timeSeries", unload = TRUE)
install.packages("zoo")
library(zoo)
ts_vars$date <- as.yearqtr(ts_vars$date,           # Convert dates to quarterly
format = "%Y-%m-%d")
ts_vars$date
ts_vars[1,]
ts_vars[,1]
ts_vars[,1] <- as.yearqtr(ts_vars[,1],           # Convert dates to quarterly
format = "%Y-%m-%d")
View(ts_vars)
ts_vars[,1] <- as.yearqtr(ts_vars[,1],           # Convert dates to quarterly
format = "%Y-%m-%d")
View(ts_vars)
ts[dummy] <- 0
ts_vars[dummy] <- 0
ts_vars[,15] <- 0
ts_vars <- ts_vars %>%
mutate(
dummy_2008 = 0
)
ts_vars[,"dummy_2008"] <- seq(0)
View(ts)
View(ts)
rm(list = ls())
setwd('/Users/axelcanales/Documents/GitHub/govsize_2023')
#Packages
#install.packages("googlesheets4")
#install.packages("timeSeries")
#install.packages("zoo")
library(dplyr)
library(googlesheets4)
library(lubridate)
library(zoo)
#Importar data (Euler)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA2",
col_names = TRUE,
range = "A1:H65"
)
#Limpieza datos (Euler)
#rename
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
var_names_bcn <- c("date", "gdp", "gov_con", "pub_inv", "priv_inv", "x", "m", "pop")
#rescale variables from BCN to millions of cords
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6
)
#Backast (Tony Stark)
#Variables as share of PIB per capita
raw_data <- raw_data %>%
mutate(
gdp_pc = gdp/pop,
gov_gdp = (gov_con + pub_inv)/gdp,
gov_con_gdp = gov_con/gdp,
pub_inv_gdp= pub_inv/gdp,
priv_inv_gdp = priv_inv/gdp,
tr_op = (x+m)/gdp,
)
#Time series set
ts_vars <- xts(data = raw_data,
start = c(2006,1),
frequency = 4
)
ts_vars <- xts(data = raw_data,
start = c(2006,1),
frequency = 4
)
install.packages("xts")
library(xts)
ts_vars <- xts(data = raw_data,
start = c(2006,1),
frequency = 4
)
View(ts_vars)
hel(xts)
help(xts)
ts_vars <- ts(data = raw_data,
start = c(2006,1),
frequency = 4
)
