raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
#Declare vector of names
var_names_bcn <- c("date", "gdp", "gov_con", "pub_inv", "priv_inv", "x", "m", "pop")
#Rescale variables from BCN to millions of cords
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6
)
### Grafica de la serie poblacion
raw_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_pop
### Debido a cambio estructural en la serie de poblacion, se procedio a reescalar la serie.
#Para reflejar la tendencia reflejada a partir de 2013, es restar al cambio porcentual de la serie
#punto de quiebre, la tasa de crecimiento trimestral de los datos previo al quiebre en el trimestre
# correspondiente.
raw_data <- raw_data %>%
mutate(
growth_pop = ifelse(date >= "2012-10-01" & date<= "2021-04-01"  , pop/lag(pop)-1,0)
)
for (x in 62:64) {
raw_data[x,9] = (raw_data[x-1,9] +raw_data[x-2,9] +raw_data[x-3,9] +raw_data[x-4,9])/4
}
for (x in 28:1) {
raw_data[x,9] = (raw_data[x+1,9] +raw_data[x+2,9] +raw_data[x+3,9] +raw_data[x+4,9])/4
}
for (x in 26:1) {
raw_data[x, 8] = raw_data[x+1, 8]/(1+raw_data[x+1,9])
}
for (x in 62:64) {
raw_data[x,8] = raw_data[x-1,8]*(1+ raw_data[x,9])
}
##Grafico de poblacion reescalada
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
tr_pop
#Variables as share of PIB per capita
raw_data <- raw_data %>%
mutate(
gdp_pc = gdp/pop,
gov_gdp = (gov_con + pub_inv)/gdp,
gov_con_gdp = gov_con/gdp,
pub_inv_gdp= pub_inv/gdp,
priv_inv_gdp = priv_inv/gdp,
tr_op = (x+m)/gdp,
)
#create dummies
raw_data <- raw_data %>%
mutate(
d_2008 = ifelse(date >= "2008-7-1" & date <= "2009-4-1" ,1,0)
)
raw_data <- raw_data %>%
mutate(
d_2018 = ifelse(date >= "2017-10-1",1,0)
)
#Time series set
ts_vars <- ts(data = raw_data[,9:14],
start = c(2006,1),
frequency = 4
)
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
raw_plot1 <- ggplot(df, aes(x = date, y = gdp_pc)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot2 <- ggplot(df, aes(x = date, y = df[,10])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot3 <- ggplot(df, aes(x = date, y = df[,11])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot4 <- ggplot(df, aes(x = date, y = df[,12])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot5 <- ggplot(df, aes(x = date, y = df[,13])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot6 <- ggplot(df, aes(x = date, y = df[,14])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
combined_plot <- ggarrange(raw_plot1,
raw_plot2,
raw_plot3,
raw_plot4,
raw_plot5,
raw_plot6,
nrow = 2,
ncol = 3) #nrow & ncol depend on how you want to #organize your plots
combined_plot
#Desestacionalizacion (Done)
seasonal_adj <- seas(x = ts_vars)
View(raw_data)
ts_vars <- ts(data = raw_data[,10:15],
start = c(2006,1),
frequency = 4
)
seasonal_adj <- seas(x = ts_vars)
#series(seasonal_adj,c("forecast.forecasts","s12"))
seasonal_adj <- final(seasonal_adj)
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
df_seas <- df_seas %>%
rename("date" = "df$date",
"gdp_pc_s"="gdp_pc",
"gov_gdp_s"="gov_gdp",
"gov_con_gdp_s"="gov_con_gdp",
"pub_inv_gdp_s"="pub_inv_gdp",
"priv_inv_gdp_s"="priv_inv_gdp",
"tr_op_s"="tr_op"
)
df_seas$date<-as.Date(df_seas$date,  "%m/%d/%y")
df_seas <- df_seas %>%
mutate(
log_gdp_pc_s= log(gdp_pc_s),
log_gov_gdp_s=log(gov_gdp_s),
log_gov_con_gdp_s=log(gov_con_gdp_s),
log_pub_inv_gdp_s=log(pub_inv_gdp_s),
log_priv_inv_gdp_s=log(priv_inv_gdp_s),
log_tr_op_s=log(tr_op_s)
)
seas_plot1 <- ggplot(df_seas, aes(x = date, y = df_seas[,2])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
ggtitle("Producto Interno Bruto Per Capita")+
labs(x="",y="")
seas_plot2 <- ggplot(df_seas, aes(x = date, y = df_seas[,3])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
ggtitle("Gasto de Gobierno agregado")+
labs(x="",y="")
seas_plot3 <- ggplot(df_seas, aes(x = date, y = df_seas[,4])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
ggtitle("Gasto de Gobierno corriente")+
labs(x="",y="")
seas_plot4 <- ggplot(df_seas, aes(x = date, y = df_seas[,5])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
ggtitle("Inverion fija publica")+
labs(x="",y="")
seas_plot5 <- ggplot(df_seas, aes(x = date, y = df_seas[,6])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
ggtitle("Inversion fija privada")+
labs(x="",y="")
seas_plot6 <- ggplot(df_seas, aes(x = date, y = df_seas[,7])) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
ggtitle("Apertura comercial")+
labs(x="",y="")
combined_plot_seas <- ggarrange(seas_plot1,
seas_plot2,
seas_plot3,
seas_plot4,
seas_plot5,
seas_plot6,
nrow = 2,
ncol = 3) #nrow & ncol depend on how you want to #organize your plots
combined_plot_seas
View(df_seas)
for (x in 8:13) {
PP_test = PP.test(df_seas[,x])
}
for (x in 8:13) {
PP_test = as.data.frame(PP.test(df_seas[,x]))
}
PP.test(df_seas[,8])
for (x in 8:13) {
PP.test(df_seas[,x])
}
for (x in 8:13) {
print(PP.test(df_seas[,x]))
}
for (x in 8:13) {
print(x)
print(PP.test(df_seas[,x]))
}
for (x in 8:13) {
print(x)
print(PP.test(diff(df_seas[,x])))
}
install.packages("aTSA")
for (x in 8:13) {
print(x)
print(pp.test(df_seas[,x]))
}
library(aTSA)
for (x in 8:13) {
print(x)
print(pp.test(df_seas[,x]))
}
### Test de Raiz Unitaria Phillips-Perron para serie en diferencias
for (x in 8:13) {
print(x)
print(pp.test(diff(df_seas[,x])))
}
x = pp.test(diff(df_seas[,x]))
View(x)
### Test de Raiz Unitaria Phillips-Perron para serie en niveles
for (x in 8:13) {
print(x)
pp_nivel = pp.test(df_seas[,x])
}
### Test de Raiz Unitaria Phillips-Perron para serie en diferencias
for (x in 8:13) {
print(x)
pp_dif = pp.test(diff(df_seas[,x]))
}
View(pp_dif)
View(pp_nivel)
View(pp_dif)
for (x in col_names(df_seas)) {
x = pp.test(diff(df_seas[,x]))
}
for (x in col_name(df_seas)) {
x = pp.test(diff(df_seas[,x]))
}
for (x in colnames(df_seas)) {
x = pp.test(diff(df_seas[,x]))
}
pp.test(diff(df_seas[,x]))
for (x in 8:13) {
x = pp.test(diff(df_seas[,x]))
}
View(x)
View(x)
View(x)
View(x)
pp_nivel <- cbind(c("Especificacion","Sin deriva ni tendencia","Con deriva y sin tendencia","Con deriva y tendencia"),c("lag","","",""),c("Z_rho","","",""),c("p.value","","",""))
View(pp_nivel)
for (x in 8:13) {
pp_nivel[[x]] <- pp.test(df_seas[,x])
}
pp_nivel <- cbind( Especificacion = c("Sin deriva ni tendencia","Con deriva y sin tendencia","Con deriva y tendencia"),Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","",""))
pp_nivel <- cbind(Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","",""))
for (x in 8:13) {
pp_nivel[[x]] <- pp.test(df_seas[,x])
}
pp_nivel <- pp.test(df_seas[,x])
for (x in 8:13) {
pp_nivel <- sapply(pp.test(df_seas[,x]))
}
View(PP_test)
pp_nivel <- pp.test(df_seas[,x]
}
pp_nivel <- data.frame(cbind(Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","","")))
View(pp_nivel)
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[,x])
}
pp_nivel <- data.frame(cbind(Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","","")))
for (x in 8:13) {
pp_nivel[[x]] <- pp.test(df_seas[,x])
}
View(pp_nivel)
pp_nivel <- data.frame(cbind(Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","","")))
View(pp_dif)
pp_nivel <- data.frame(cbind(Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","","")))
View(pp_nivel)
for (x in 8:13) {
pp_nivel[[,x]] <- pp.test(df_seas[,x])
}
for (x in 8:13) {
pp_nivel[[x]] <- pp.test(df_seas[,x])
}
View(pp_nivel)
pp_nivel <- data.frame(cbind(Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","","")))
for (x in 8:13) {
pp_nivel[x] <- pp.test(df_seas[,x])
}
for (x in 8:13) {
pp_nivel[,x] <- pp.test(df_seas[,x])
}
View(pp_nivel)
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[,x])
}
View(pp_nivel)
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[,x])
}
x
pp.test(df_seas[,x])
save <- list()
for (x in 8:13) {
save[[x]] <- pp.test(df_seas[x])
}
save <- matrix()
for (x in 8:13) {
save[[x]] <- pp.test(df_seas[x])
}
View(save)
View(ts_vars)
View(pp_nivel)
pp_nivel$p.value
pp_nivel[[1,1]]
View(pp_nivel)
pp_nivel[1,1]
save <- matrix(nrow=6, ncol=3)
View(save)
save <- matrix(nrow=12, ncol=3)
for (i in 8:13) {
p <- pp.test(df_seas[i])##ya
save[i, ] <- c(p[1,3],p[2,3],p[3,3])
}
View(raw_pop)
View(save)
p$column <- unlist(p$column)
pp_nivel <- pp.test(df_seas[x])
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[x])
}
pp_nivel <- data.frame(cbind(Rezago =c("","",""),Z_rho=c("","",""),Valor_p=c("","","")))
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[x])
}
class(pp_nivel)
save <- matrix(nrow=12, ncol=3)
for (i in 8:13) {
p <- pp.test(df_seas[i])##ya
p$column <- unlist(p$column)
save[i, ] <- c(p[1,3],p[2,3],p[3,3])
}
save <- matrix(nrow=12, ncol=3)
for (i in 8:13) {
p <- as.data.frame(pp.test(df_seas[i]))##ya
save[i, ] <- c(p[1,3],p[2,3],p[3,3])
}
save <- matrix(nrow=12, ncol=3)
for (i in 8:13) {
p <- unlist(pp.test(df_seas[i]))##ya
save[i, ] <- c(p[1,3],p[2,3],p[3,3])
}
save <- matrix(nrow=12, ncol=3)
for (i in 8:13) {
p <- pp.test(df_seas[i]))##ya
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[x])
}
rm(list = ls())
#Working directory
setwd('C:/Users/MatildeCerdaRuiz/Documents/GitHub/govsize_2023')
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA",
col_names = TRUE,
range = "A1:H65"
)
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
#Declare vector of names
var_names_bcn <- c("date", "gdp", "gov_con", "pub_inv", "priv_inv", "x", "m", "pop")
#Rescale variables from BCN to millions of cords
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6
)
raw_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_pop
raw_data <- raw_data %>%
mutate(
growth_pop = ifelse(date >= "2012-10-01" & date<= "2021-04-01"  , pop/lag(pop)-1,0)
)
for (x in 62:64) {
raw_data[x,9] = (raw_data[x-1,9] +raw_data[x-2,9] +raw_data[x-3,9] +raw_data[x-4,9])/4
}
for (x in 28:1) {
raw_data[x,9] = (raw_data[x+1,9] +raw_data[x+2,9] +raw_data[x+3,9] +raw_data[x+4,9])/4
}
for (x in 26:1) {
raw_data[x, 8] = raw_data[x+1, 8]/(1+raw_data[x+1,9])
}
for (x in 62:64) {
raw_data[x,8] = raw_data[x-1,8]*(1+ raw_data[x,9])
}
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
tr_pop
raw_data <- raw_data %>%
mutate(
gdp_pc = gdp/pop,
gov_gdp = (gov_con + pub_inv)/gdp,
gov_con_gdp = gov_con/gdp,
pub_inv_gdp= pub_inv/gdp,
priv_inv_gdp = priv_inv/gdp,
tr_op = (x+m)/gdp,
)
raw_data <- raw_data %>%
mutate(
d_2008 = ifelse(date >= "2008-7-1" & date <= "2009-4-1" ,1,0)
)
raw_data <- raw_data %>%
mutate(
d_2018 = ifelse(date >= "2017-10-1",1,0)
)
#Time series set
ts_vars <- ts(data = raw_data[,10:15],
start = c(2006,1),
frequency = 4
)
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
seasonal_adj <- seas(x = ts_vars)
#series(seasonal_adj,c("forecast.forecasts","s12"))
seasonal_adj <- final(seasonal_adj)
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
df_seas <- df_seas %>%
rename("date" = "df$date",
"gdp_pc_s"="gdp_pc",
"gov_gdp_s"="gov_gdp",
"gov_con_gdp_s"="gov_con_gdp",
"pub_inv_gdp_s"="pub_inv_gdp",
"priv_inv_gdp_s"="priv_inv_gdp",
"tr_op_s"="tr_op"
)
df_seas$date<-as.Date(df_seas$date,  "%m/%d/%y")
#Log tranasformation
df_seas <- df_seas %>%
mutate(
log_gdp_pc_s= log(gdp_pc_s),
log_gov_gdp_s=log(gov_gdp_s),
log_gov_con_gdp_s=log(gov_con_gdp_s),
log_pub_inv_gdp_s=log(pub_inv_gdp_s),
log_priv_inv_gdp_s=log(priv_inv_gdp_s),
log_tr_op_s=log(tr_op_s)
)
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[x])
}
x
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[x])
}
pp.test(df_seas[x]
pp.test(df_seas[8]
pp.test(df_seas[,8])
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[,x])
}
View(pp_nivel)
names(pp_nivel)
names(pp.test(df_seas[,8]))
pp.test(df_seas[,9])
class(pp_nivel)
save <- matrix(nrow=6, ncol=3)
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[,x])
save[x, ] <- pp_nivel[,3]
}
save <- matrix(nrow=6, ncol=3)
for (x in 8:13) {
pp_nivel <- pp.test(df_seas[,x])
save[x, ] == pp_nivel[,3]
}
class(pp.test(df_seas[,9]))
pp_nivel_8 = pp.test(df_saes[,8])
pp_nivel_8 = pp.test(df_seas[,8])
pp_nivel_8 = pp.test(df_seas[,8])
pp_nivel_9 = pp.test(df_seas[,9])
pp_nivel<- rbind(pp_nivel_8,pp_nivel_9)
View(df_seas)
View(pp_nivel)
pp_nivel <- matrix(ncol = 3, nrow = 6)
pp_nivel_8 = pp.test(df_seas[,8])
pp_nivel_9 = pp.test(df_seas[,9])
pp_nivel<- rbind(pp_nivel_8,pp_nivel_9)
for(i in 8:13) {
pp_nivel[i] <- pp.test(df_seas[i])
# names(pp_nivel)[[i]] <- paste0(names(df_xyz)[[i]], "_mean") # Name results here
}
View(pp_nivel)
class(pp_nivel_8)
