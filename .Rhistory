theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Inversion Fija Privada")+
labs(x="",y="",title = "Inversi√≥n fija privada",
subtitle = "Porcentaje respecto al PIB p.c.", )
seas_plot6 <- ggplot(df_seas, aes(x = date, y = df_seas[,7])) +
geom_line() +
geom_smooth(method="lm", se=FALSE,  linetype = "dashed")+
scale_x_date(date_breaks = "years" , date_labels = "%Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Apertura Comercial")+
labs(x="",y="",title = "Apertura comercial",
subtitle = "Porcentaje respecto al PIB p.c.", )
combined_plot_seas <- ggarrange(seas_plot1,
seas_plot2,
seas_plot3,
seas_plot4,
seas_plot5,
seas_plot6,
nrow = 2,
ncol = 3) #nrow & ncol depend on how you want to #organize your plots
combined_plot_seas
ggsave("variables_sin_titulo.png", width=24, height =14 , units= c("cm"), dpi=500)
df_modelo1 <- data.frame(df_modelo1, df[,17:18])
df_modelo2 <- data.frame(df_modelo2, df[,17:18])
write_xlsx(raw_data, paste(path,"raw_data.xlsx", sep="/"))
write.csv(raw_data, paste(path,"raw_data.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_modelo1, paste(path,"df_modelo1.xlsx", sep="/"))
write.csv(df_modelo1, paste(path,"df_modelo1.csv", sep="/"))
write_xlsx(df_modelo2, paste(path,"df_modelo2.xlsx", sep="/"))
write.csv(df_modelo2, paste(path,"df_modelo2.csv", sep="/"))
df_modelo1 <- as.data.frame(c(df_seas[,2:3],df_seas[,6:7]))
colnames(df_modelo1)<- c("gdp_pc_s", "gov_gdp_s", "priv_inv_gdp_s","tr_op_s")
df_modelo2 <- as.data.frame(cbind.data.frame(df_seas[,2],df_seas[,5:7]))
colnames(df_modelo2)<- c("gdp_pc_s", "pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
df_modelo1 <- data.frame(df_modelo1, df[,17:18])
df_modelo2 <- data.frame(df_modelo2, df[,17:18])
write_xlsx(raw_data, paste(path,"raw_data.xlsx", sep="/"))
write.csv(raw_data, paste(path,"raw_data.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_modelo1, paste(path,"df_modelo1.xlsx", sep="/"))
write.csv(df_modelo1, paste(path,"df_modelo1.csv", sep="/"))
write_xlsx(df_modelo2, paste(path,"df_modelo2.xlsx", sep="/"))
write.csv(df_modelo2, paste(path,"df_modelo2.csv", sep="/"))
path<-getwd()
write_xlsx(raw_data, paste(path,"raw_data.xlsx", sep="/"))
write.csv(raw_data, paste(path,"raw_data.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_modelo1, paste(path,"df_modelo1.xlsx", sep="/"))
write.csv(df_modelo1, paste(path,"df_modelo1.csv", sep="/"))
write_xlsx(df_modelo2, paste(path,"df_modelo2.xlsx", sep="/"))
write.csv(df_modelo2, paste(path,"df_modelo2.csv", sep="/"))
View(df_seas)
View(seasonal_adj)
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
View(df_seas)
colnames(df_seas)<- c("date", "gdp_pc_s", "pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
View(df_seas)
colnames(df_seas)<- c("date", "gdp_pc_s", "gov_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
View(seasonal_adj)
colnames(df_seas)<- c("date", "log_gdp_pc_s", "gov_gdp_s", "gov_con_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
colnames(df_seas)<- c("date", "log_gdp_pc_s", "gov_gdp_s", "gov_con_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s", "growth_gdp")
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
bootstrap_data<- cbind(read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE,
paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)
)#reading table with coefficients and p-values
bootstrap_data<- cbind(read.csv(paste(getwd(), "dofiles/lineales_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/lineales_inversion.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/cuadraticos_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/cuadraticos_inversion.csv", sep="/"), header = FALSE)
)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "dofiles/lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
bootstrap_data <- colnames("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap_data)
names(bootstrap_data) <- c("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap_data)
View(bootstrap_data)
View(bootstrap_data)
bootstrap_data$lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
rm(boostrap_data)
rm(bootstrap_data)
bootstrap_data$lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
View(bootstrap_data)
rm(bootstrap_data)
lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap <- cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion)
View(bootstrap)
bootstrap <- as.data.frame(cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion)
View(bootstrap)
View(bootstrap)
bootstrap <- as.data.frame(cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion))
View(bootstrap)
names(bootstrap) <- c("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap)
bootstrap_data %>% bootstrap_data
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
library(dplyr)
bootstrap_data %>% bootstrap_data
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
bootstrap %>% bootstrap
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
View(bootstrap)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
class(bootstrap)
summary(bootstrap)4
summary(bootstrap)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
bootstrap <- bootstrap %>%
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
View(bootstrap)
#CLEAR
rm(list = ls())
setwd('C:/Users/Axel Canales/Documents/GitHub/govsize_2023')
setwd('C:/Users/MatildeCerdaRuiz/Documents/GitHub/govsize_2023')
path <- getwd()
library(patchwork)#para combinar graficos en una imagen
library(ggplot2)
library(fUnitRoots)
library(writexl)#para exportar el excel
library(vars)
library(forecast)#for lag selection VAR
library(tidyverse)#manipulation de datos en general
library(xtable)#para tablas de latex
library(cointReg)#para FMOLS
library(urca)#para test de Johansen
library(dplyr)#manipulacion de datos en general
library(googlesheets4)#para importar de G. Drive
library(TSstudio)
library(zoo)#funciones de series de tiempo
library(seasonal)#Para desestacionalizar
library(TSstudio)#PAra desestacionalizar
library(ggpubr)
library(aTSA) #pptest
library(broom)
library(dplyr)
library(stargazer)
library(vars)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA3",
col_names = TRUE,
range = "A1:I69"
)
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP",
"gdp_nom" = "RAW_GDP_NOM"
)
var_names_bcn <- c("date", "gdp", "gov_con", "pub_inv", "priv_inv", "x", "m", "pop","gdp_nom")
#Rescale variables from BCN to millions of cords
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6,
gdp_nom=gdp_nom*10^6
)
raw_data <- raw_data %>%
mutate(
growth_pop = ifelse(date >= "2012-10-01" & date<= "2021-04-01"  , pop/lag(pop)-1,0)
)
for (x in 50:68) {
raw_data[x,10] = (raw_data[x-1,10] +raw_data[x-2,10] +raw_data[x-3,10] +raw_data[x-4,10])/4
}
for (x in 28:1) {
raw_data[x,10] = (raw_data[x+1,10] +raw_data[x+2,10] +raw_data[x+3,10] +raw_data[x+4,10])/4
}
for (x in 26:1) {
raw_data[x, 8] = raw_data[x+1, 8]/(1+raw_data[x+1,10])
}
for (x in 50:68) {
raw_data[x,8] = raw_data[x-1,8]*(1+ raw_data[x,10])
}
raw_data <- raw_data %>%
mutate(
log_gdp_pc = log(gdp/pop),
gov_gdp = (gov_con + pub_inv)/gdp_nom,
gov_con_gdp = gov_con/gdp_nom,
pub_inv_gdp= pub_inv/gdp_nom,
priv_inv_gdp = priv_inv/gdp_nom,
tr_op = (x+m)/gdp_nom,
)
raw_data <- raw_data %>%
mutate(
growth_gdp_pc = log_gdp_pc/lag(log_gdp_pc)-1
)
#create dummies
raw_data <- raw_data %>%
mutate(
d_2008 = ifelse(date >= "2008-7-1" & date <= "2009-4-1" ,1,0)
)
raw_data <- raw_data %>%
mutate(
d_2018 = ifelse(date >= "2017-10-1",1,0)
)
#Time series set
ts_vars <- ts(data = raw_data[,11:ncol(raw_data)],
start = c(2006,1),
frequency = 4
)
#creating variable for date
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
seasonal_adj <- seas(x = ts_vars[,1:7])
seasonal_adj <- final(seasonal_adj)
#ggplot_graph
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
df_seas <- df_seas %>%
rename(
"date" = "df$date",
)
exploratory_analysis<-df_seas[,2:7]
exploratory_analysis<-exploratory_analysis %>%
mutate(
log_gdp_pc = exp(log_gdp_pc),
gov_gdp = gov_gdp*100,
gov_con_gdp =  gov_con_gdp*100,
pub_inv_gdp= pub_inv_gdp*100,
priv_inv_gdp= priv_inv_gdp*100,
tr_op = tr_op
)
colnames(exploratory_analysis)<-c("PIB per capita",
"Gasto de Gobierno agregado",
"Gasto de Gobierno corriente",
"Inversi√≥n fija p√∫blica",
"Inversi√≥n fija privada",
"Apertura comercial"
)
exploratory_analysis_tex <- stargazer(exploratory_analysis, type='latex', digits=2)
stargazer(exploratory_analysis, type='text', digits=2)
variables <- df_seas[,2:7] #Crea un dataframe con variables desestacionalizadas y en logaritmos
u_root <- data.frame(matrix(NA, nrow = 6, ncol = 12))
for (i in 1:ncol(variables)) { #Es un loop para realizar el test PP a cada variable guardada en save
col <- variables[,i]
u_root[i,1] <-  adfTest(col, type = c("nc"))@test$p.value
u_root[i,2] <-  adfTest(col, type = c("c"))@test$p.value
u_root[i,3] <-  adfTest(col, type = c("ct"))@test$p.value
u_root[i,4] <-  adfTest(diff(col), type = c("nc"))@test$p.value
u_root[i,5] <-  adfTest(diff(col), type = c("c"))@test$p.value
u_root[i,6] <-  adfTest(diff(col), type = c("ct"))@test$p.value
u_root[i,7] <-  pp.test(col)[1,3]
u_root[i,8] <-  pp.test(col)[2,3]
u_root[i,9] <-  pp.test(col)[3,3]
u_root[i,10] <-  pp.test(diff(col))[1,3]
u_root[i,11] <-  pp.test(diff(col))[2,3]
u_root[i,12] <-  pp.test(diff(col))[3,3]
}
series = c( "PIB per ÃÅcapita","Gasto de Gobierno Agregado","Gasto de Gobierno Corriente","Inversion fija Publica","Inversion Fija Privada","Apertura Comercial")
u_root$series = series
u_root <- u_root %>% relocate(series)
# Redondeando los valores en la tabla
u_root <- u_root %>%
mutate(across(where(is.numeric), round, digits=2))
# Exportar codigo de raices unitarias a latex
View(u_root)
# Exportar codigo de raices unitarias a latex
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{6}{c}{ADF} &
\\multicolumn{6}{c}{PP}\\\\
\\midrule
\\headrow & \\multicolumn{3}{c}{Variable en nivel} &
\\multicolumn{3}{c}{Variable en diferencias} &
\\multicolumn{3}{c}{Variable en nivel} &
\\multicolumn{3}{c}{Variable en diferencias}\\\\
\\midrule
\\headrow Serie trimestral &
\\multicolumn{1}{c}{N.} &
\\multicolumn{1}{c}{I.} &
\\multicolumn{1}{c}{I. y T.} &
\\multicolumn{1}{c}{N.} &
\\multicolumn{1}{c}{I.} &
\\multicolumn{1}{c}{I. y T.}&
\\multicolumn{1}{c}{N.} &
\\multicolumn{1}{c}{I.} &
\\multicolumn{1}{c}{I. y T.} &
\\multicolumn{1}{c}{N.} &
\\multicolumn{1}{c}{I.} &
\\multicolumn{1}{c}{I. y T.} \\\\
\\bottomrule")
print(xtable(u_root), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
var_gob <-  variables[,1:2]
lag_selection_gov <- VARselect(var_gob, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
df_lag_selection_gov <- as.data.frame(VARselect(var_gob, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)[[2]])
Criterio = c("AIC","HQ","SC","FPE")
df_lag_selection_gov$Criterio = Criterio
df_lag_selection_gov <-df_lag_selection_gov %>% relocate(Criterio)
# Redondeando los valores en la tabla
df_lag_selection_gov <- df_lag_selection_gov %>%
mutate(across(where(is.numeric), round, digits=2))
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{5}{c}{Criterio de seleccion de rezagos} \\\\
\\midrule
\\headrow Criterio &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} &
\\multicolumn{1}{c}{5} \\\\
\\bottomrule")
print(xtable(df_lag_selection_gov), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
View(df_lag_selection_gov)
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{5}{c}{Criterio de seleccion de rezagos} \\\\
\\midrule
\\multicolumn{1}{c}{} &
\\multicolumn{5}{c}{Numero de rezagos}
\\midrule
\\headrow Criterio &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} &
\\multicolumn{1}{c}{5} \\\\
\\bottomrule")
print(xtable(df_lag_selection_gov), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{5}{c}{Criterio de seleccion de rezagos} \\\\
\\midrule
\\multicolumn{1}{c}{} &
\\multicolumn{5}{c}{Numero de rezagos}
\\midrule
\\headrow Criterio &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} &
\\multicolumn{1}{c}{5} \\\\
\\bottomrule")
print(xtable(df_lag_selection_gov), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{5}{c}{Criterio de seleccion de rezagos} \\\\
\\midrule &
\\multicolumn{5}{c}{Numero de rezagos}
\\midrule
\\headrow Criterio &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} &
\\multicolumn{1}{c}{5} \\\\
\\bottomrule")
print(xtable(df_lag_selection_gov), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
lag_selection_gov <- VARselect(var_gob, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
lag_selection_gov
var_inv <- variables %>%  select(log_gdp_pc_s, log_pub_inv_gdp_s)
View(df_seas)
var_inv <- variables %>%  select(log_gdp_pc, pub_inv_gdp)
lag_selection_inv <- VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
df_lag_selection_inv <- as.data.frame(VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)[[2]])
df_lag_selection_inv$Criterio = Criterio
df_lag_selection_inv <-df_lag_selection_inv %>% relocate(Criterio)
# Redondeando los valores en la tabla
df_lag_selection_inv <- df_lag_selection_inv %>%
mutate(across(where(is.numeric), round, digits=2))
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{5}{c}{Criterio de seleccion de rezagos} \\\\
\\midrule
\\multicolumn{5}{c}{Numero de rezagos}
\\midrule
\\headrow Criterio &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} &
\\multicolumn{1}{c}{5} \\\\
\\bottomrule")
print(xtable(df_lag_selection_inv), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
#Prueba de presedencia temporal De Gasto Gobierno Agregado (Tony Stark)
lag_selection_inv
granger_gov_pib <- list()
granger_pib_gov <- list()
for (i in 1:4) {
granger_gov_pib[[i]] <- grangertest(variables[,2],variables[,1], order = i) #Gasto de Gobierno causa a PIB
granger_pib_gov[[i]] <- grangertest(variables[,1],variables[,2], order = i) #PIB causa a Gasto de Gobierno
}
#Prueba de precedencia temporal Inversion Fija Publica (Tony Stark)
granger_inv_pib <- list()
granger_pib_inv <- list()
for (i in 1:4) {
granger_inv_pib[[i]] <- grangertest(variables[,4],variables[,1], order = i) #Gasto de Gobierno causa a PIB
granger_pib_inv[[i]] <- grangertest(variables[,1],variables[,4], order = i) #PIB causa a Gasto de Gobierno
}
#Generar cuadro de precedencia temporal de granger
prueba_granger <- data.frame(matrix(NA, nrow = 4, ncol = 5))
prueba_granger[1,1] <- c("Gasto publico agregado no causa a PIB per capita")
prueba_granger[2,1] <- c("PIB per capita no causa a Gasto publico agregado")
prueba_granger[3,1] <- c("Inversion fija publica no causa a PIB per capita")
prueba_granger[4,1] <- c("PIB per capita no causa a Inversion fija publica")
###Llenado del cuadro de test de procedencia de Granger
for (i in 1:4) {
prueba_granger[1,i+1] <- granger_gov_pib[[i]][2,4]
prueba_granger[2,i+1] <- granger_pib_gov[[i]][2,4]
prueba_granger[3,i+1] <- granger_inv_pib[[i]][2,4]
prueba_granger[4,i+1] <- granger_pib_inv[[i]][2,4]
}
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{4}{c}{Numero de rezagos} \\\\
\\midrule
\\headrow Hipotesis Nula &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} \\\\
\\bottomrule")
print(xtable(prueba_granger), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
View(granger_inv_pib)
View(granger_inv_pib)
granger_inv_pib[[1]]
