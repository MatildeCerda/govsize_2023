View(df_seas)
colnames(df_seas)<- c("date", "gdp_pc_s", "gov_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
View(seasonal_adj)
colnames(df_seas)<- c("date", "log_gdp_pc_s", "gov_gdp_s", "gov_con_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
colnames(df_seas)<- c("date", "log_gdp_pc_s", "gov_gdp_s", "gov_con_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s", "growth_gdp")
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
bootstrap_data<- cbind(read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE,
paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)
)#reading table with coefficients and p-values
bootstrap_data<- cbind(read.csv(paste(getwd(), "dofiles/lineales_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/lineales_inversion.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/cuadraticos_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/cuadraticos_inversion.csv", sep="/"), header = FALSE)
)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "dofiles/lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
bootstrap_data <- colnames("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap_data)
names(bootstrap_data) <- c("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap_data)
View(bootstrap_data)
View(bootstrap_data)
bootstrap_data$lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
rm(boostrap_data)
rm(bootstrap_data)
bootstrap_data$lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
View(bootstrap_data)
rm(bootstrap_data)
lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap <- cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion)
View(bootstrap)
bootstrap <- as.data.frame(cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion)
View(bootstrap)
View(bootstrap)
bootstrap <- as.data.frame(cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion))
View(bootstrap)
names(bootstrap) <- c("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap)
bootstrap_data %>% bootstrap_data
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
library(dplyr)
bootstrap_data %>% bootstrap_data
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
bootstrap %>% bootstrap
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
View(bootstrap)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
class(bootstrap)
summary(bootstrap)4
summary(bootstrap)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
bootstrap <- bootstrap %>%
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
View(bootstrap)
rm(list = ls())
setwd('C:/Users/MatildeCerdaRuiz/Documents/GitHub/govsize_2023')
path <- getwd()
library(patchwork)#para combinar graficos en una imagen
library(ggplot2)
library(fUnitRoots)
library(writexl)#para exportar el excel
library(vars)
library(forecast)#for lag selection VAR
library(tidyverse)#manipulation de datos en general
library(xtable)#para tablas de latex
library(cointReg)#para FMOLS
library(urca)#para test de Johansen
library(dplyr)#manipulacion de datos en general
library(googlesheets4)#para importar de G. Drive
library(TSstudio)
library(zoo)#funciones de series de tiempo
library(seasonal)#Para desestacionalizar
library(TSstudio)#PAra desestacionalizar
library(ggpubr)
library(aTSA) #pptest
library(broom)
library(dplyr)
library(stargazer)
library(vars)
#Import data from Drive
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA3",
col_names = TRUE,
range = "A1:I69"
)
#rename
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP",
"gdp_nom" = "RAW_GDP_NOM"
)
var_names_bcn <- c("date", "gdp", "gov_con", "pub_inv", "priv_inv", "x", "m", "pop","gdp_nom")
#Rescale variables from BCN to millions of cords
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6,
gdp_nom=gdp_nom*10^6
)
raw_data <- raw_data %>%
mutate(
growth_pop = ifelse(date >= "2012-10-01" & date<= "2021-04-01"  , pop/lag(pop)-1,0)
)
for (x in 50:68) {
raw_data[x,10] = (raw_data[x-1,10] +raw_data[x-2,10] +raw_data[x-3,10] +raw_data[x-4,10])/4
}
for (x in 28:1) {
raw_data[x,10] = (raw_data[x+1,10] +raw_data[x+2,10] +raw_data[x+3,10] +raw_data[x+4,10])/4
}
for (x in 26:1) {
raw_data[x, 8] = raw_data[x+1, 8]/(1+raw_data[x+1,10])
}
for (x in 50:68) {
raw_data[x,8] = raw_data[x-1,8]*(1+ raw_data[x,10])
}
raw_data <- raw_data %>%
mutate(
log_gdp_pc = log(gdp/pop),
gov_gdp = (gov_con + pub_inv)/gdp_nom,
gov_con_gdp = gov_con/gdp_nom,
pub_inv_gdp= pub_inv/gdp_nom,
priv_inv_gdp = priv_inv/gdp_nom,
tr_op = (x+m)/gdp_nom,
)
raw_data <- raw_data %>%
mutate(
growth_gdp_pc = log_gdp_pc/lag(log_gdp_pc)-1
)
#create dummies
raw_data <- raw_data %>%
mutate(
d_2008 = ifelse(date >= "2008-7-1" & date <= "2009-4-1" ,1,0)
)
raw_data <- raw_data %>%
mutate(
d_2018 = ifelse(date >= "2017-10-1",1,0)
)
ts_vars <- ts(data = raw_data[,11:ncol(raw_data)],
start = c(2006,1),
frequency = 4
)
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
seasonal_adj <- seas(x = ts_vars[,1:7])
seasonal_adj <- final(seasonal_adj)
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
df_seas <- df_seas %>%
rename(
"date" = "df$date",
)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <-c(
"OLS",
"FMOLS",
"CCR"
)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), ~ paste(,"%")))
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), ~ paste("%")))
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), ~ paste([,],"%")))
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
View(cuadro8_tamano_optimo)
df[,c(4,5)] <- paste(df[,c(4,5)], "%", sep = "")
View(df)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA3",
col_names = TRUE,
range = "A1:I69"
)
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP",
"gdp_nom" = "RAW_GDP_NOM"
)
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6,
gdp_nom=gdp_nom*10^6
)
raw_data <- raw_data %>%
mutate(
growth_pop = ifelse(date >= "2012-10-01" & date<= "2021-04-01"  , pop/lag(pop)-1,0)
)
for (x in 50:68) {
raw_data[x,10] = (raw_data[x-1,10] +raw_data[x-2,10] +raw_data[x-3,10] +raw_data[x-4,10])/4
}
for (x in 28:1) {
raw_data[x,10] = (raw_data[x+1,10] +raw_data[x+2,10] +raw_data[x+3,10] +raw_data[x+4,10])/4
}
for (x in 26:1) {
raw_data[x, 8] = raw_data[x+1, 8]/(1+raw_data[x+1,10])
}
for (x in 50:68) {
raw_data[x,8] = raw_data[x-1,8]*(1+ raw_data[x,10])
}
raw_data <- raw_data %>%
mutate(
log_gdp_pc = log(gdp/pop),
gov_gdp = (gov_con + pub_inv)/gdp_nom,
gov_con_gdp = gov_con/gdp_nom,
pub_inv_gdp= pub_inv/gdp_nom,
priv_inv_gdp = priv_inv/gdp_nom,
tr_op = (x+m)/gdp_nom,
)
raw_data <- raw_data %>%
mutate(
growth_gdp_pc = log_gdp_pc/lag(log_gdp_pc)-1
)
raw_data <- raw_data %>%
mutate(
d_2008 = ifelse(date >= "2008-7-1" & date <= "2009-4-1" ,1,0)
)
raw_data <- raw_data %>%
mutate(
d_2018 = ifelse(date >= "2017-10-1",1,0)
)
#Time series set
ts_vars <- ts(data = raw_data[,11:ncol(raw_data)],
start = c(2006,1),
frequency = 4
)
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
seasonal_adj <- seas(x = ts_vars[,1:7])
seasonal_adj <- final(seasonal_adj)
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
df_seas <- df_seas %>%
rename(
"date" = "df$date",
)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
cuadro8_tamano_optimo[1,1] <- "OLS"
cuadro8_tamano_optimo[2,1] <- "FMOLS"
cuadro8_tamano_optimo[3,1] <- "CCR"
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo$V4 <- paste(cuadro8_tamano_optimo$V4, "%", sep = "")
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo$V4 <- paste(cuadro8_tamano_optimo$V4, "%", sep = "")
cuadro8_tamano_optimo[1:3,2:3] <- "Si"
View(cuadro8_tamano_optimo)
View(raw_data)
cuadro8_tamano_optimo[V6] <- c("",mean(raw_data$gov_gdp),"")
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo$V4 <- paste(cuadro8_tamano_optimo$V4, "%", sep = "")
cuadro8_tamano_optimo$V5 <- paste(cuadro8_tamano_optimo$V5, "%", sep = "")
cuadro8_tamano_optimo$V6 <- c("",mean(raw_data$gov_gdp),"")
cuadro8_tamano_optimo$V7 <- c("",mean(raw_data$pub_inv_gdp),"")
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
View(cuadro8_tamano_optimo)
rm(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo[1,1] <- "OLS"
cuadro8_tamano_optimo[2,1] <- "FMOLS"
cuadro8_tamano_optimo[3,1] <- "CCR"
cuadro8_tamano_optimo[1:3,2:3] <- "Si"
cuadro8_tamano_optimo$V4 <- paste(cuadro8_tamano_optimo$V4, "%", sep = "")
cuadro8_tamano_optimo$V5 <- paste(cuadro8_tamano_optimo$V5, "%", sep = "")
cuadro8_tamano_optimo$V6 <- c("",100*mean(raw_data$gov_gdp),"")
cuadro8_tamano_optimo$V7 <- c("",100*mean(raw_data$pub_inv_gdp,2),"")
cuadro8_tamano_optimo$V5 <- paste(cuadro8_tamano_optimo[2,6:7], "%", sep = "")
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
)
View(cuadro8_tamano_optimo)
rm(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo[1,1] <- "OLS"
cuadro8_tamano_optimo[2,1] <- "FMOLS"
cuadro8_tamano_optimo[3,1] <- "CCR"
cuadro8_tamano_optimo[1:3,2:3] <- "Si"
cuadro8_tamano_optimo$V6 <- c("",100*mean(raw_data$gov_gdp),"")
cuadro8_tamano_optimo$V7 <- c("",100*mean(raw_data$pub_inv_gdp,2),"")
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2)))
cuadro8_tamano_optimo$V4 <- paste(cuadro8_tamano_optimo$V4, "%", sep = "")
cuadro8_tamano_optimo$V5 <- paste(cuadro8_tamano_optimo$V5, "%", sep = "")
cuadro8_tamano_optimo$V5 <- paste(cuadro8_tamano_optimo[2,6:7], "%", sep = "")
View(cuadro8_tamano_optimo)
> rm(cuadro8_tamano_optimo)
rm(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo[1,1] <- "OLS"
cuadro8_tamano_optimo[2,1] <- "FMOLS"
cuadro8_tamano_optimo[3,1] <- "CCR"
cuadro8_tamano_optimo[1:3,2:3] <- "Si"
cuadro8_tamano_optimo$V6 <- c("",100*mean(raw_data$gov_gdp),"")
cuadro8_tamano_optimo$V7 <- c("",100*mean(raw_data$pub_inv_gdp,2),"")
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
rm(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo[1,1] <- "OLS"
cuadro8_tamano_optimo[2,1] <- "FMOLS"
cuadro8_tamano_optimo[3,1] <- "CCR"
cuadro8_tamano_optimo[1:3,2:3] <- "Si"
cuadro8_tamano_optimo$V6 <- c("",round(100*mean(raw_data$gov_gdp),2),"")
cuadro8_tamano_optimo$V7 <- c("",round(100*mean(raw_data$pub_inv_gdp),2),"")
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
rm(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo[1,1] <- "OLS"
cuadro8_tamano_optimo[2,1] <- "FMOLS"
cuadro8_tamano_optimo[3,1] <- "CCR"
cuadro8_tamano_optimo[1:3,2:3] <- "Si"
cuadro8_tamano_optimo$V6 <- c("",100*mean(raw_data$gov_gdp),"")
cuadro8_tamano_optimo$V7 <- c("",100*mean(raw_data$pub_inv_gdp),"")
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
rm(cuadro8_tamano_optimo)
cuadro8_tamano_optimo <- read.csv(paste(getwd(), "dofiles/cuadro8.csv", sep="/"),header=FALSE)
cuadro8_tamano_optimo[1,1] <- "OLS"
cuadro8_tamano_optimo[2,1] <- "FMOLS"
cuadro8_tamano_optimo[3,1] <- "CCR"
cuadro8_tamano_optimo[1:3,2:3] <- "Si"
cuadro8_tamano_optimo$V6 <- c("",round(100*mean(raw_data$gov_gdp),2),"")
cuadro8_tamano_optimo$V7 <- c("",round(100*mean(raw_data$pub_inv_gdp),2),"")
cuadro8_tamano_optimo <- cuadro8_tamano_optimo %>%
mutate(across(where(is.numeric), round, digits=2))
View(cuadro8_tamano_optimo)
cuadro8_tamano_optimo$V4 <- paste(cuadro8_tamano_optimo$V4, "%", sep = "")
cuadro8_tamano_optimo$V5 <- paste(cuadro8_tamano_optimo$V5, "%", sep = "")
cuadro8_tamano_optimo[2,6:7] <- paste(cuadro8_tamano_optimo[2,6:7], "%", sep = "")
View(cuadro8_tamano_optimo)
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow  & \\multicolumn{2}{c}{¿Es valida la curva de Armey?} &
\\multicolumn{2}{c}{Nivel óptimo de Gasto (% del PIB)}&
\\multicolumn{2}{c}{Nivel Efectivo de Gasto}\\\\
\\midrule
\\headrow
\\multicolumn{1}{c}{Metodologia} &
\\multicolumn{1}{c}{Gasto de Gobierno Agregado} &
\\multicolumn{1}{c}{Inversion Fija Publica} &
\\multicolumn{1}{c}{Gasto de Gobierno Agregado} &
\\multicolumn{1}{c}{Inversion Fija Publica} &
\\multicolumn{1}{c}{Gasto de Gobierno Agregado} &
\\multicolumn{1}{c}{Inversion Fija Publica}\\\\
\\bottomrule")
print(xtable(cuadro8_tamano_optimo), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow   \\multicolumn{1}{c}{}  &
\\multicolumn{2}{c}{¿Es valida la curva de Armey?} &
\\multicolumn{2}{c}{Nivel óptimo de Gasto (% del PIB)}&
\\multicolumn{2}{c}{Nivel Efectivo de Gasto}\\\\
\\midrule
\\headrow
\\multicolumn{1}{c}{Metodologia} &
\\multicolumn{1}{c}{Gasto de Gobierno Agregado} &
\\multicolumn{1}{c}{Inversion Fija Publica} &
\\multicolumn{1}{c}{Gasto de Gobierno Agregado} &
\\multicolumn{1}{c}{Inversion Fija Publica} &
\\multicolumn{1}{c}{Gasto de Gobierno Agregado} &
\\multicolumn{1}{c}{Inversion Fija Publica}\\\\
\\bottomrule")
print(xtable(cuadro8_tamano_optimo), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
var_inv <- variables %>%  select(log_gdp_pc, pub_inv_gdp)
variables <- df_seas[,2:7]
var_inv <- variables %>%  select(log_gdp_pc, pub_inv_gdp)
cuadro_4<- VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
df_cuadro_4<- as.data.frame(VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)[[2]])
df_lag_selection_inv$Criterio = Criterio
var_inv <- variables %>%  select(log_gdp_pc, pub_inv_gdp)
cuadro_4<- VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
df_cuadro_4<- as.data.frame(VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)[[2]])
df_cuadro_4$Criterio = Criterio
View(df_cuadro_4)
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow &
\\multicolumn{5}{c}{Numero de rezagos}
\\midrule
\\headrow Criterio &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} &
\\multicolumn{1}{c}{5} \\\\
\\bottomrule")
print(xtable(df_cuadro_4), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
var_inv <- variables %>%  select(log_gdp_pc, pub_inv_gdp)
cuadro_4<- VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
df_cuadro_4<- as.data.frame(VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)[[2]])
Criterio = c("AIC","HQ","SC","FPE")
df_cuadro_4$Criterio = Criterio
df_cuadro_4<-df_cuadro_4%>% relocate(Criterio)
# Redondeando los valores en la tabla
df_cuadro_4<- df_cuadro_4%>%
mutate(across(where(is.numeric), round, digits=2))
View(df_cuadro_4)
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow &
\\multicolumn{5}{c}{Numero de rezagos}
\\midrule
\\headrow Criterio &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} &
\\multicolumn{1}{c}{5} \\\\
\\bottomrule")
print(xtable(df_cuadro_4), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
