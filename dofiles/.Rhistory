print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
??xtable
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
print("2")
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
View(addtorow_models_pub_inv)
addtorow_models_pub_inv$pos <- list(0)
addtorow_models_pub_inv$command <- c("\\hline
\\multicolumn{13}{c}{Variable dependiente: Logaritmo del PIB per cápita}                                                                                                                                                                                                                                        \\ \\hline
&      & \\multicolumn{3}{c}{OLS}                      &                          & \\multicolumn{3}{c}{FMOLS}                         &                                                 & \\multicolumn{3}{c}{CCR}                        \\ \\cline{3-5} \\cline{7-9} \\cline{11-13}
\\multirow{-2}{*}{Variables}                            &      & Lineal      & Cuadrática     & Cúbica        & \\multicolumn{1}{c}{}     & Lineal          & Cuadrática     & Cúbica         & \\multicolumn{1}{c}{}                            & Lineal       & Cuadrática     & Cúbica         \\ \\hline\\hline
")
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
addtorow_models_pub_inv$command <- c("\\hline
\\multicolumn{13}{c}{Variable dependiente: Logaritmo del PIB per cápita}                                                                                                                                                                                                                                        \\\ \\hline
&      & \\multicolumn{3}{c}{OLS}                      &                          & \\multicolumn{3}{c}{FMOLS}                         &                                                 & \\multicolumn{3}{c}{CCR}                        \\\ \\cline{3-5} \\cline{7-9} \\cline{11-13}
\\multirow{-2}{*}{Variables}                            &      & Lineal      & Cuadrática     & Cúbica        & \\multicolumn{1}{c}{}     & Lineal          & Cuadrática     & Cúbica         & \\multicolumn{1}{c}{}                            & Lineal       & Cuadrática     & Cúbica         \\\ \\hline\\hline
")
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), type="latex", include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), include.rownames = FALSE, include.colnames = FALSE, sanitize.text.function = function(x){x} )
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv, include.rownames = FALSE, include.colnames = FALSE, sanitize.text.function = function(x){x} )
rm(list = ls())
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA3",
col_names = TRUE,
range = "A1:H69"
)
library(ggplot2)
library(fUnitRoots)
library(writexl)#para exportar el excel
library(vars)
library(forecast)#for lag selection VAR
library(tidyverse)#manipulation de datos en general
library(xtable)#para tablas de latex
library(cointReg)#para FMOLS
library(urca)#para test de Johansen
library(dplyr)#manipulacion de datos en general
library(googlesheets4)#para importar de G. Drive
library(TSstudio)
library(patchwork)#para combinar graficos en una imagen
library(zoo)#funciones de series de tiempo
library(seasonal)#Para desestacionalizar
library(TSstudio)#PAra desestacionalizar
library(ggpubr)
library(patchwork) # para combinar graficos
library(aTSA) #pptest
library(broom)
library(dplyr)
library(stargazer)
library(vars)
raw_data <- read_sheet("https://docs.google.com/spreadsheets/d/15_lA3MjsOMDQinHgw2A93T7tTmHdqEpOQGHSFFtkpIU/edit?usp=sharing",
sheet = "RAW_DATA3",
col_names = TRUE,
range = "A1:H69"
)
raw_data <- raw_data %>%
rename(
"date" = "DATE",
"gdp" = "RAW_GDP",
"gov_con" = "RAW_GOV_CON",
"pub_inv" = "RAW_PUB_INV",
"priv_inv" = "RAW_PRIV_INV",
"x" = "RAW_X",
"m" = "RAW_M",
"pop" = "RAW_POP"
)
raw_data <- raw_data %>%
mutate(
gdp = gdp*10^6,
gov_con =gov_con*10^6,
pub_inv= pub_inv*10^6,
priv_inv=priv_inv*10^6,
x=x*10^6,
m=m*10^6
)
raw_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_pop
raw_data <- raw_data %>%
mutate(
growth_pop = ifelse(date >= "2012-10-01" & date<= "2021-04-01"  , pop/lag(pop)-1,0)
)
for (x in 62:68) {
raw_data[x,9] = (raw_data[x-1,9] +raw_data[x-2,9] +raw_data[x-3,9] +raw_data[x-4,9])/4
}
for (x in 28:1) {
raw_data[x,9] = (raw_data[x+1,9] +raw_data[x+2,9] +raw_data[x+3,9] +raw_data[x+4,9])/4
}
for (x in 26:1) {
raw_data[x, 8] = raw_data[x+1, 8]/(1+raw_data[x+1,9])
}
for (x in 62:68) {
raw_data[x,8] = raw_data[x-1,8]*(1+ raw_data[x,9])
}
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="",
title = "Población total",
subtitle = "Habitantes",
caption = "Fuente: Elaboración y cálculos propios con base en datos de INIDE")
tr_pop
ggsave("population_con_titulo.png", width=10, height =7 , units= c("cm"), dpi=500)
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_breaks = "years" , date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
ggsave("population_sin_titulo.png", width=10, height =7 , units= c("cm"), dpi=500)
View(raw_data)
View(raw_data)
View(raw_data)
for (x in 62:68) {
raw_data[x,9] = (raw_data[x-1,9] +raw_data[x-2,9] +raw_data[x-3,9] +raw_data[x-4,9])/4
}
View(raw_data)
raw_data[68,9]
View(raw_pop)
View(raw_data)
for (x in 50:68) {
raw_data[x,9] = (raw_data[x-1,9] +raw_data[x-2,9] +raw_data[x-3,9] +raw_data[x-4,9])/4
}
View(raw_data)
for (x in 50:68) {
raw_data[x,8] = raw_data[x-1,8]*(1+ raw_data[x,9])
}
View(raw_data)
tr_pop <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")+
theme_classic()+
theme(plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
)+
ggtitle("Población")+
labs(x="",
y="",
title = "Población total",
subtitle = "Habitantes",
caption = "Fuente: Elaboración y cálculos propios con base en datos de INIDE")
tr_pop
ggsave("population_con_titulo.png", width=10, height =7 , units= c("cm"), dpi=500)
tr_pop_2 <- ggplot(raw_data, aes(x = as.Date(date), y = pop)) +
geom_line() +
scale_x_date(date_breaks = "years" , date_labels = "%b %Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 14, face = "bold"),
plot.subtitle = element_text(color = "black", size = 11, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Población")+
labs(x="",
y="")
#    title = "",
#   subtitle = "",
#  caption = "")
tr_pop_2
ggsave("population_sin_titulo.png", width=10, height =7 , units= c("cm"), dpi=500)
raw_data <- raw_data %>%
mutate(
log_gdp_pc = log(gdp/pop),
gov_gdp = (gov_con + pub_inv)/gdp,
gov_con_gdp = gov_con/gdp,
pub_inv_gdp= pub_inv/gdp,
priv_inv_gdp = priv_inv/gdp,
tr_op = (x+m)/gdp,
)
raw_data <- raw_data %>%
mutate(
growth_gdp_pc = log_gdp_pc/lag(log_gdp_pc)-1
)
#create dummies
raw_data <- raw_data %>%
mutate(
d_2008 = ifelse(date >= "2008-7-1" & date <= "2009-4-1" ,1,0)
)
raw_data <- raw_data %>%
mutate(
d_2018 = ifelse(date >= "2017-10-1",1,0)
)
#Time series set
ts_vars <- ts(data = raw_data[,10:ncol(raw_data)],
start = c(2006,1),
frequency = 4
)
#creating variable for date
df <- as.data.frame(raw_data)
df$date<-as.Date(df$date,  "%m/%d/%y")
raw_plot1 <- ggplot(df, aes(x = date, y = gdp_pc)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot2 <- ggplot(df, aes(x = date, y = gov_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot3 <- ggplot(df, aes(x = date, y = gov_con_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot4 <- ggplot(df, aes(x = date, y = pub_inv_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot5 <- ggplot(df, aes(x = date, y = priv_inv_gdp)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
raw_plot6 <- ggplot(df, aes(x = date, y = tr_op)) +
geom_line() +
scale_x_date(date_labels = "%b %Y")
combined_plot_raw <- ggarrange(raw_plot1,
raw_plot2,
raw_plot3,
raw_plot4,
raw_plot5,
raw_plot6,
nrow = 2,
ncol = 3) #nrow & ncol depend on how you want to #organize your plots
combined_plot_raw
seasonal_adj <- seas(x = ts_vars[,1:7])
#series(seasonal_adj,c("forecast.forecasts","s12"))
seasonal_adj <- final(seasonal_adj)
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
seas_plot1 <- ggplot(df_seas, aes(x = date, y = df_seas[,2])) +
geom_line() +
geom_smooth(method="lm", se=FALSE,  linetype = "dashed")+
scale_x_date(date_breaks = "years" , date_labels = "%Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Producto Interno Bruto Per Capita")+
labs(x="",y="",title = "Producto Interno Bruto Per Capita",
subtitle = "Cordobas constantes por habitante", )
seas_plot2 <- ggplot(df_seas, aes(x = date, y = df_seas[,3])) +
geom_line() +
geom_smooth(method="lm", se=FALSE,  linetype = "dashed")+
scale_x_date(date_breaks = "years" , date_labels = "%Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
labs(x="",y="",title = "Gasto de Goberno agregado",
subtitle = "Porcentaje respecto al PIB p.c.", )
seas_plot3 <- ggplot(df_seas, aes(x = date, y = df_seas[,4])) +
geom_line() +
geom_smooth(method="lm", se=FALSE,  linetype = "dashed")+
scale_x_date(date_breaks = "years" , date_labels = "%Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Producto Interno Bruto Per Capita")+
labs(x="",y="",title = "Gasto de Goberno corriente",
subtitle = "Porcentaje respecto al PIB p.c.", )
seas_plot4 <- ggplot(df_seas, aes(x = date, y = df_seas[,5])) +
geom_line() +
geom_smooth(method="lm", se=FALSE,  linetype = "dashed")+
scale_x_date(date_breaks = "years" , date_labels = "%Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Producto Interno Bruto Per Capita")+
labs(x="",y="",title = "Inversión fija pública",
subtitle = "Porcentaje respecto al PIB p.c.", )
seas_plot5 <- ggplot(df_seas, aes(x = date, y = df_seas[,6])) +
geom_line() +
geom_smooth(method="lm", se=FALSE,  linetype = "dashed")+
scale_x_date(date_breaks = "years" , date_labels = "%Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Inversion Fija Privada")+
labs(x="",y="",title = "Inversión fija privada",
subtitle = "Porcentaje respecto al PIB p.c.", )
seas_plot6 <- ggplot(df_seas, aes(x = date, y = df_seas[,7])) +
geom_line() +
geom_smooth(method="lm", se=FALSE,  linetype = "dashed")+
scale_x_date(date_breaks = "years" , date_labels = "%Y")+
theme_classic()+
theme_bw()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
plot.caption = element_text(hjust = 0),
plot.title.position = "plot",
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 7, face = "italic"),
plot.caption.position = "plot",
axis.text.x = element_text(angle=90, hjust = 1)
)+
#ggtitle("Apertura Comercial")+
labs(x="",y="",title = "Apertura comercial",
subtitle = "Porcentaje respecto al PIB p.c.", )
combined_plot_seas <- ggarrange(seas_plot1,
seas_plot2,
seas_plot3,
seas_plot4,
seas_plot5,
seas_plot6,
nrow = 2,
ncol = 3) #nrow & ncol depend on how you want to #organize your plots
combined_plot_seas
ggsave("variables_sin_titulo.png", width=24, height =14 , units= c("cm"), dpi=500)
df_modelo1 <- data.frame(df_modelo1, df[,17:18])
df_modelo2 <- data.frame(df_modelo2, df[,17:18])
write_xlsx(raw_data, paste(path,"raw_data.xlsx", sep="/"))
write.csv(raw_data, paste(path,"raw_data.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_modelo1, paste(path,"df_modelo1.xlsx", sep="/"))
write.csv(df_modelo1, paste(path,"df_modelo1.csv", sep="/"))
write_xlsx(df_modelo2, paste(path,"df_modelo2.xlsx", sep="/"))
write.csv(df_modelo2, paste(path,"df_modelo2.csv", sep="/"))
df_modelo1 <- as.data.frame(c(df_seas[,2:3],df_seas[,6:7]))
colnames(df_modelo1)<- c("gdp_pc_s", "gov_gdp_s", "priv_inv_gdp_s","tr_op_s")
df_modelo2 <- as.data.frame(cbind.data.frame(df_seas[,2],df_seas[,5:7]))
colnames(df_modelo2)<- c("gdp_pc_s", "pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
df_modelo1 <- data.frame(df_modelo1, df[,17:18])
df_modelo2 <- data.frame(df_modelo2, df[,17:18])
write_xlsx(raw_data, paste(path,"raw_data.xlsx", sep="/"))
write.csv(raw_data, paste(path,"raw_data.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_modelo1, paste(path,"df_modelo1.xlsx", sep="/"))
write.csv(df_modelo1, paste(path,"df_modelo1.csv", sep="/"))
write_xlsx(df_modelo2, paste(path,"df_modelo2.xlsx", sep="/"))
write.csv(df_modelo2, paste(path,"df_modelo2.csv", sep="/"))
path<-getwd()
write_xlsx(raw_data, paste(path,"raw_data.xlsx", sep="/"))
write.csv(raw_data, paste(path,"raw_data.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_modelo1, paste(path,"df_modelo1.xlsx", sep="/"))
write.csv(df_modelo1, paste(path,"df_modelo1.csv", sep="/"))
write_xlsx(df_modelo2, paste(path,"df_modelo2.xlsx", sep="/"))
write.csv(df_modelo2, paste(path,"df_modelo2.csv", sep="/"))
View(df_seas)
View(seasonal_adj)
df_seas <- as.data.frame(seasonal_adj)
df_seas <- cbind(df$date, df_seas[,])
View(df_seas)
colnames(df_seas)<- c("date", "gdp_pc_s", "pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
View(df_seas)
colnames(df_seas)<- c("date", "gdp_pc_s", "gov_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
View(seasonal_adj)
colnames(df_seas)<- c("date", "log_gdp_pc_s", "gov_gdp_s", "gov_con_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s")
View(df_seas)
colnames(df_seas)<- c("date", "log_gdp_pc_s", "gov_gdp_s", "gov_con_gdp_s","pub_inv_gdp_s", "priv_inv_gdp_s","tr_op_s", "growth_gdp")
write_xlsx(df_seas, paste(path,"df_seas.xlsx", sep="/"))
write.csv(df_seas, paste(path,"df_seas.csv", sep="/"))
bootstrap_data<- cbind(read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE,
paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)
)#reading table with coefficients and p-values
bootstrap_data<- cbind(read.csv(paste(getwd(), "dofiles/lineales_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/lineales_inversion.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/cuadraticos_agregado.csv", sep="/"), header = FALSE,
paste(getwd(), "dofiles/cuadraticos_inversion.csv", sep="/"), header = FALSE)
)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "dofiles/lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
bootstrap_data <- colnames("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap_data)
names(bootstrap_data) <- c("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap_data)
View(bootstrap_data)
View(bootstrap_data)
bootstrap_data$lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
rm(boostrap_data)
rm(bootstrap_data)
bootstrap_data$lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data$cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap_data <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
View(bootstrap_data)
View(bootstrap_data)
rm(bootstrap_data)
lineales_agregado <- read.csv(paste(getwd(), "lineales_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
lineales_inversion <- read.csv(paste(getwd(), "lineales_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
cuadraticos_agregado <- read.csv(paste(getwd(), "cuadraticos_agregado.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
cuadraticos_inersion <- read.csv(paste(getwd(), "cuadraticos_inversion.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
bootstrap <- cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion)
View(bootstrap)
bootstrap <- as.data.frame(cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion)
View(bootstrap)
View(bootstrap)
bootstrap <- as.data.frame(cbind(lineales_agregado, lineales_inversion, cuadraticos_agregado, cuadraticos_inersion))
View(bootstrap)
names(bootstrap) <- c("lin_ag", "lin_inv", "cuad_ag", "cuad_inv")
View(bootstrap)
bootstrap_data %>% bootstrap_data
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
library(dplyr)
bootstrap_data %>% bootstrap_data
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
bootstrap %>% bootstrap
mutate(
op_lin = -lin_ag/(2*cuad_ag),
op_ag = -lin_inv/(2*cuad_inv)
)
View(bootstrap)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
class(bootstrap)
summary(bootstrap)4
summary(bootstrap)
bootstrap %>% bootstrap
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
bootstrap <- bootstrap %>%
mutate(
op_ag = -lin_ag/(2*cuad_ag),
op_inv = -lin_inv/(2*cuad_inv)
)
View(bootstrap)
