lag_selection_gov <- VARselect(var_gob, lag.max = 7, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
lag_selection_gov
df_lag_selection_gov <- as.data.frame(VARselect(var_gob, lag.max = 7, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)[[2]])
View(df_lag_selection_gov)
Criterio = c("AIC","HQ","SC","FPE")
df_lag_selection_gov$Criterio = Criterio
df_lag_selection_gov <-df_lag_selection_gov %>% relocate(Criterio)
df_lag_selection_gov <- df_lag_selection_gov %>%
mutate(across(where(is.numeric), round, digits=2))
View(df_lag_selection_gov)
var_inv <- variables %>%  select(log_gdp_pc_s, log_pub_inv_gdp_s)
lag_selection_inv <- VARselect(var_inv, lag.max = 7, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
lag_selection_inv
var_inv <- variables %>%  select(log_gdp_pc_s, log_pub_inv_gdp_s)
lag_selection_inv <- VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)
df_lag_selection_inv <- as.data.frame(VARselect(var_inv, lag.max = 5, type = c("const", "trend", "both", "none"),
season = NULL, exogen = NULL)[[2]])
df_lag_selection_inv$Criterio = Criterio
df_lag_selection_inv <-df_lag_selection_inv %>% relocate(Criterio)
# Redondeando los valores en la tabla
df_lag_selection_inv <- df_lag_selection_inv %>%
mutate(across(where(is.numeric), round, digits=2))
View(df_lag_selection_inv)
install.packages('lmtest')
install.packages("lmtest")
library(lmtest) #Test de causalidad de granger
View(variables)
grangertest(variables[,2],variables[,1], order = 1)
grangertest(variables[,1],variables[,2], order = 1) #PIB causa a Gasto de Gobierno
class(grangertest(variables[,1],variables[,2], order = 1))
for (i in 1:4) {
grangertest(variables[,2],variables[,1], order = 1) #Gasto de Gobierno causa a PIB
grangertest(variables[,1],variables[,2], order = 1) #PIB causa a Gasto de Gobierno
}
for (i in 1:4) {
grangertest(variables[,2],variables[,1], order = i) #Gasto de Gobierno causa a PIB
grangertest(variables[,1],variables[,2], order = i) #PIB causa a Gasto de Gobierno
}
for (i in 1:4) {
granger_gov_pib_i <- grangertest(variables[,2],variables[,1], order = i) #Gasto de Gobierno causa a PIB
granger_pib_gov_i <- grangertest(variables[,1],variables[,2], order = i) #PIB causa a Gasto de Gobierno
}
View(granger_gov_pib_i)
View(granger_pib_gov_i)
grangertest(variables[,2],variables[,1], order = i)
grangertest(variables[,2],variables[,1], order = i)[2,3]
grangertest(variables[,2],variables[,1], order = i)[2,4]
for (i in 1:4) {
granger_gov_pib[[i]] <- grangertest(variables[,2],variables[,1], order = i) #Gasto de Gobierno causa a PIB
granger_pib_gov[[i]] <- grangertest(variables[,1],variables[,2], order = i) #PIB causa a Gasto de Gobierno
}
granger_gov_pib <- list()
granger_pib_gov <- list()
for (i in 1:4) {
granger_gov_pib[[i]] <- grangertest(variables[,2],variables[,1], order = i) #Gasto de Gobierno causa a PIB
granger_pib_gov[[i]] <- grangertest(variables[,1],variables[,2], order = i) #PIB causa a Gasto de Gobierno
}
View(granger_pib_gov)
View(granger_gov_pib)
View(granger_gov_pib_i)
View(granger_gov_pib)
granger_gov_pib[[i]]
granger_gov_pib[[2]]
granger_gov_pib[[3]]
granger_gov_pib[[3]][2,4]
granger_inv_pib <- list()
granger_pib_inv <- list()
for (i in 1:4) {
granger_inv_pib[[i]] <- grangertest(variables[,4],variables[,1], order = i) #Gasto de Gobierno causa a PIB
granger_pib_inv[[i]] <- grangertest(variables[,1],variables[,4], order = i) #PIB causa a Gasto de Gobierno
}
prueba_granger <- data.frame(matrix(NA, nrow = 4, ncol = 5))
View(prueba_granger)
prueba_granger[1,1] <- c("Gasto publico agregado no causa a PIB per capita")
View(prueba_granger)
prueba_granger <- data.frame(matrix(NA, nrow = 4, ncol = 5))
prueba_granger[1,1] <- c("Gasto publico agregado no causa a PIB per capita")
prueba_granger[2,1] <- c("PIB per capita no causa a Gasto publico agregado")
prueba_granger[3,1] <- c("Inversion fija publica no causa a PIB per capita")
prueba_granger[4,1] <- c("PIB per capita no causa a Inversion fija publica")
View(prueba_granger)
for (i in 1:4) {
prueba_granger[1,i] <- granger_gov_pib[[i]][2,4]
}
View(prueba_granger)
prueba_granger <- data.frame(matrix(NA, nrow = 4, ncol = 5))
prueba_granger[1,1] <- c("Gasto publico agregado no causa a PIB per capita")
prueba_granger[2,1] <- c("PIB per capita no causa a Gasto publico agregado")
prueba_granger[3,1] <- c("Inversion fija publica no causa a PIB per capita")
prueba_granger[4,1] <- c("PIB per capita no causa a Inversion fija publica")
for (i in 1:4) {
prueba_granger[1,i+1] <- granger_gov_pib[[i]][2,4]
}
View(prueba_granger)
for (i in 1:4) {
prueba_granger[1,i+1] <- granger_gov_pib[[i]][2,4]
prueba_granger[2,i+1] <- granger_pib_gov[[i]][2,4]
prueba_granger[3,i+1] <- granger_inv_pib[[i]][2,4]
prueba_granger[4,i+1] <- granger_gov_inv[[i]][2,4]
}
for (i in 1:4) {
prueba_granger[1,i+1] <- granger_gov_pib[[i]][2,4]
prueba_granger[2,i+1] <- granger_pib_gov[[i]][2,4]
prueba_granger[3,i+1] <- granger_inv_pib[[i]][2,4]
prueba_granger[4,i+1] <- granger_pib_inv[[i]][2,4]
}
View(prueba_granger)
granger_pib_gov[[1]][2,4]
granger_pib_gov[[1]]
prueba_granger <- data.frame(matrix(NA, nrow = 4, ncol = 5))
prueba_granger[1,1] <- c("Gasto publico agregado no causa a PIB per capita")
prueba_granger[2,1] <- c("PIB per capita no causa a Gasto publico agregado")
prueba_granger[3,1] <- c("Inversion fija publica no causa a PIB per capita")
prueba_granger[4,1] <- c("PIB per capita no causa a Inversion fija publica")
###Llenado del cuadro de test de procedencia de Granger
for (i in 1:4) {
prueba_granger[1,i+1] <- granger_gov_pib[[i]][2,4]
prueba_granger[2,i+1] <- granger_pib_gov[[i]][2,4]
prueba_granger[3,i+1] <- granger_inv_pib[[i]][2,4]
prueba_granger[4,i+1] <- granger_pib_inv[[i]][2,4]
}
## Creacion de titulos y subtitulos para exportar cuadro a latex
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{5}{c}{Numero de rezagos} \\\\
\\midrule
\\headrow Hipotesis Nula &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} \\\\
\\bottomrule")
print(xtable(prueba_granger), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
library(xtable)
prueba_granger <- data.frame(matrix(NA, nrow = 4, ncol = 5))
prueba_granger[1,1] <- c("Gasto publico agregado no causa a PIB per capita")
prueba_granger[2,1] <- c("PIB per capita no causa a Gasto publico agregado")
prueba_granger[3,1] <- c("Inversion fija publica no causa a PIB per capita")
prueba_granger[4,1] <- c("PIB per capita no causa a Inversion fija publica")
###Llenado del cuadro de test de procedencia de Granger
for (i in 1:4) {
prueba_granger[1,i+1] <- granger_gov_pib[[i]][2,4]
prueba_granger[2,i+1] <- granger_pib_gov[[i]][2,4]
prueba_granger[3,i+1] <- granger_inv_pib[[i]][2,4]
prueba_granger[4,i+1] <- granger_pib_inv[[i]][2,4]
}
## Creacion de titulos y subtitulos para exportar cuadro a latex
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{5}{c}{Numero de rezagos} \\\\
\\midrule
\\headrow Hipotesis Nula &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} \\\\
\\bottomrule")
print(xtable(prueba_granger), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
addtorow <- list()
addtorow$pos <- list(0)
addtorow$command <- c(" \\toprule
\\headrow & \\multicolumn{4}{c}{Numero de rezagos} \\\\
\\midrule
\\headrow Hipotesis Nula &
\\multicolumn{1}{c}{1} &
\\multicolumn{1}{c}{2} &
\\multicolumn{1}{c}{3} &
\\multicolumn{1}{c}{4} \\\\
\\bottomrule")
print(xtable(prueba_granger), add.to.row = addtorow, include.rownames = FALSE, include.colnames = FALSE )
View(df_lag_selection_gov)
View(df_lag_selection_gov)
View(df_lag_selection_inv)
View(df_lag_selection_inv)
View(save)
save[["log_gdp_pc_s"]][["x"]]
pp.test(variables$log_gdp_pc_s)
install.packages('tseries')
library(tseries)
pp.test(variables$log_gdp_pc_s)
pp.test(variables$log_gdp_pc_s)
View(save)
save[["log_gdp_pc_s"]]
save_adf <- list() #Genera una lista para guardar los resultados de los test de raiz unitaria
for (i in 1:ncol(variables)) { #Es un loop para realizar el test PP a cada variable guardada en save
col <- variables[,i]
save_adf[[i]] <- tidy(ur.df(col,type = c("none","drift","trend")))
}
install.packages('broom')
install.packages("broom")
install.packages("broom")
library(broom)
variables <- df_seas[,8:13] #Genera una matriz con variables desestacionalizadas y en logaritmos
variables_diff <- apply(variables, 2, diff)  #Genera una matriz con las variables en diferencias
save_adf <- list() #Genera una lista para guardar los resultados de los test de raiz unitaria
for (i in 1:ncol(variables)) { #Es un loop para realizar el test PP a cada variable guardada en save
col <- variables[,i]
save_adf[[i]] <- tidy(ur.df(col,type = c("none","drift","trend")))
}
ur.df(variables$log_gdp_pc_s)
ur.df(col,type ="trend")
urdfTest(variables$log_gdp_pc_s)
library(urca)
urdfTest(variables$log_gdp_pc_s)
pp.test(variables$log_gdp_pc_s)
install.packages("urca")
install.packages("urca")
library(urca)
ur.df(variables$log_gdp_pc_s, type = c("none", "drift", "trend"))
ur.df(variables$log_gdp_pc_s)
summary(ur.df(variables$log_gdp_pc_s, type = c("none", "drift", "trend")))
class(summary(ur.df(variables$log_gdp_pc_s, type = c("none", "drift", "trend"))))
install.pacakges("fUnitRoots")
install.packages("fUnitRoots")
library(fUnitRoots)
adfTest(variables$log_gdp_pc_s)
class(adfTest(variables$log_gdp_pc_s))
adfTest(variables$log_gdp_pc_s, type = c("nc", "c", "ct"))
adfTest(variables$log_gdp_pc_s, type = "ct")
class(adfTest(variables$log_gdp_pc_s, type = "ct"))
getwd()
models_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv"))
paste(getwd(), "tabla_modelos_inv.csv")
models_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv", sep="/"))
View(models_pub_inv)
View(models_pub_inv)
models_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv", sep="/"), header = FALSE)
View(models_pub_inv)
variables <- df_seas[,2:7] #Crea un dataframe con variables desestacionalizadas y en logaritmos
u_root <- data.frame(matrix(NA, nrow = 6, ncol = 12)) #Crear un dataframe vacio que sera la tabla de salidas para el analisis de raices unitarias
View(u_root)
for (i in 1:ncol(variables)) { #Es un loop para realizar el test PP a cada variable guardada en save
col <- variables[,i]
u_root[i,1] <-  adfTest(col, type = c("nc"))@test$p.value
u_root[i,2] <-  adfTest(col, type = c("c"))@test$p.value
u_root[i,3] <-  adfTest(col, type = c("ct"))@test$p.value
u_root[i,4] <-  adfTest(diff(col), type = c("nc"))@test$p.value
u_root[i,5] <-  adfTest(diff(col), type = c("c"))@test$p.value
u_root[i,6] <-  adfTest(diff(col), type = c("ct"))@test$p.value
u_root[i,7] <-  pp.test(col)[1,3]
u_root[i,8] <-  pp.test(col)[2,3]
u_root[i,9] <-  pp.test(col)[3,3]
u_root[i,10] <-  pp.test(diff(col))[1,3]
u_root[i,11] <-  pp.test(diff(col))[2,3]
u_root[i,12] <-  pp.test(diff(col))[3,3]
}
View(u_root)
View(u_root)
??adfTest
library(aTSA) #pptest
library(ggplot2)
library(fUnitRoots)
library(writexl)#para exportar el excel
library(vars)
library(forecast)#for lag selection VAR
library(tidyverse)#manipulation de datos en general
library(xtable)#para tablas de latex
library(cointReg)#para FMOLS
library(urca)#para test de Johansen
library(dplyr)#manipulacion de datos en general
library(googlesheets4)#para importar de G. Drive
library(TSstudio)
library(patchwork)#para combinar graficos en una imagen
library(zoo)#funciones de series de tiempo
library(seasonal)#Para desestacionalizar
library(TSstudio)#PAra desestacionalizar
library(ggpubr)
library(patchwork) # para combinar graficos
library(aTSA) #pptest
library(broom)
library(dplyr)
library(stargazer)
library(vars)
for (i in 1:ncol(variables)) { #Es un loop para realizar el test PP a cada variable guardada en save
col <- variables[,i]
u_root[i,1] <-  adfTest(col, type = c("nc"))@test$p.value
u_root[i,2] <-  adfTest(col, type = c("c"))@test$p.value
u_root[i,3] <-  adfTest(col, type = c("ct"))@test$p.value
u_root[i,4] <-  adfTest(diff(col), type = c("nc"))@test$p.value
u_root[i,5] <-  adfTest(diff(col), type = c("c"))@test$p.value
u_root[i,6] <-  adfTest(diff(col), type = c("ct"))@test$p.value
u_root[i,7] <-  pp.test(col)[1,3]
u_root[i,8] <-  pp.test(col)[2,3]
u_root[i,9] <-  pp.test(col)[3,3]
u_root[i,10] <-  pp.test(diff(col))[1,3]
u_root[i,11] <-  pp.test(diff(col))[2,3]
u_root[i,12] <-  pp.test(diff(col))[3,3]
}
View(u_root)
series = c( "PIB per ́capita","Gasto de Gobierno Agregado","Gasto de Gobierno Corriente","Inversion fija Publica","Inversion Fija Privada","Apertura Comercial")
u_root$series = series
u_root <- u_root %>% relocate(series)
models_pub_inv <- models_pub_inv %>%
mutate(across(where(is.numeric), round, digits=2))#rounding
models_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
models_pub_inv <- models_pub_inv %>%
mutate(across(where(is.numeric), round, digits=2))#rounding
col<-c("","",
"Variables",
"$c$",
"$INV$",
"$AC$",
"$D_{2008}",
"D_{2018}",
"$GOB$",
"$GOB^2",
"$GOB^3",
"$R^2$ ajustado",
"Estadístico JB",
"Prueba BGLM",
"Prueba BPG")
models_pub_inv$col1 <- col
models_pub_inv <- data.frame(matrix(NA, nrow = 23, ncol = 10))
View(models_pub_inv)
coef_pval_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
coef_pval_pub_inv <- coef_pval_pub_inv %>%
mutate(across(where(is.numeric), round, digits=2))#rounding
View(coef_pval_pub_inv)
col<-c("","",
"Variables",
"$c$",
"$INV$",
"$AC$",
"$D_{2008}",
"D_{2018}",
"$GOB$",
"$GOB^2",
"$GOB^3",
"$R^2$ ajustado",
"Estadístico JB",
"Prueba BGLM",
"Prueba BPG")
models_pub_inv <- as.data.frame(col,coef_pval_pub_inv)
col<-c("","",
"Variables",
"$c$",
"",
"$INV$",
"",
"$AC$",
"",
"$D_{2008}",
"",
"D_{2018}",
"",
"$GOB$",
"",
"$GOB^2",
"",
"$GOB^3",
"",
"$R^2$ ajustado",
"Estadístico JB",
"Prueba BGLM",
"Prueba BPG")
models_pub_inv$series <- col
models_pub_inv$col <- col
col<-c("","",
"Variables",
"$c$",
"",
"$INV$",
"",
"$AC$",
"",
"$D_{2008}",
"",
"D_{2018}",
"",
"$GOB$",
"",
"$GOB^2",
"",
"$GOB^3",
"",
"$R^2$ ajustado",
"Estadístico JB",
"Prueba BGLM",
"Prueba BPG")
models_pub_inv$col <- col
models_pub_inv <- data.frame(matrix(NA, nrow = 23, ncol = 10))
coef_pval_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
coef_pval_pub_inv <- coef_pval_pub_inv %>%
mutate(across(where(is.numeric), round, digits=2))#rounding
col<-c("","",
"Variables",
"$c$",
"",
"$INV$",
"",
"$AC$",
"",
"$D_{2008}",
"",
"D_{2018}",
"",
"$GOB$",
"",
"$GOB^2",
"",
"$GOB^3",
"",
"$R^2$ ajustado",
"Estadístico JB",
"Prueba BGLM",
"Prueba BPG")
models_pub_inv$col <- col
models_pub_inv <- models_pub_inv %>% relocate(col)
models_pub_inv <- data.frame(matrix(NA, nrow = 20, ncol = 10))
coef_pval_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
coef_pval_pub_inv <- coef_pval_pub_inv %>%
mutate(across(where(is.numeric), round, digits=2))#rounding
col<-c(
"$c$",
"",
"$INV$",
"",
"$AC$",
"",
"$D_{2008}",
"",
"D_{2018}",
"",
"$GOB$",
"",
"$GOB^2",
"",
"$GOB^3",
"",
"$R^2$ ajustado",
"Estadístico JB",
"Prueba BGLM",
"Prueba BPG")
models_pub_inv$col <- col
models_pub_inv <- models_pub_inv %>% relocate(col)
models_pub_inv <- rbind(col, coef_pval_pub_inv)
models_pub_inv <- cbind(col, coef_pval_pub_inv)
models_pub_inv <- data.frame(matrix(NA, nrow = 20, ncol = 10))
coef_pval_pub_inv <- read.csv(paste(getwd(), "tabla_modelos_inv.csv", sep="/"), header = FALSE)#reading table with coefficients and p-values
coef_pval_pub_inv <- coef_pval_pub_inv %>%
mutate(across(where(is.numeric), round, digits=2))#rounding
col<-c(
"$c$",
"",
"$INV$",
"",
"$AC$",
"",
"$D_{2008}",
"",
"D_{2018}",
"",
"$GOB$",
"",
"$GOB^2",
"",
"$GOB^3",
"",
"$R^2$ ajustado",
"Estadístico JB",
"Prueba BGLM",
"Prueba BPG")
models_pub_inv$col <- col
models_pub_inv <- models_pub_inv %>% relocate(col)
models_pub_inv <- cbind(col, coef_pval_pub_inv)
addtorow_models_pub_inv <- list()
addtorow_models_pub_inv $pos <- list(0)
addtorow_models_pub_inv $command <- c("\hline
\multicolumn{13}{c}{Variable dependiente: Logaritmo del PIB per cápita}                                                                                                                                                                                                                                        \\ \hline
&      & \multicolumn{3}{c}{OLS}                      &                          & \multicolumn{3}{c}{FMOLS}                         &                                                 & \multicolumn{3}{c}{CCR}                        \\ \cline{3-5} \cline{7-9} \cline{11-13}
\multirow{-2}{*}{Variables}                            &      & Lineal      & Cuadrática     & Cúbica        & \multicolumn{1}{c}{}     & Lineal          & Cuadrática     & Cúbica         & \multicolumn{1}{c}{}                            & Lineal       & Cuadrática     & Cúbica         \\ \hline\hline
")
print(xtable(prueba_granger), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
addtorow_models_pub_inv <- list()
addtorow_models_pub_inv $pos <- list(0)
addtorow_models_pub_inv $command <- c("\\hline
\\multicolumn{13}{c}{Variable dependiente: Logaritmo del PIB per cápita}                                                                                                                                                                                                                                        \\ \\hline
&      & \\multicolumn{3}{c}{OLS}                      &                          & \\multicolumn{3}{c}{FMOLS}                         &                                                 & \\multicolumn{3}{c}{CCR}                        \\ \\cline{3-5} \\cline{7-9} \\cline{11-13}
\\multirow{-2}{*}{Variables}                            &      & Lineal      & Cuadrática     & Cúbica        & \\multicolumn{1}{c}{}     & Lineal          & Cuadrática     & Cúbica         & \\multicolumn{1}{c}{}                            & Lineal       & Cuadrática     & Cúbica         \\ \\hline\\hline
")
print(xtable(prueba_granger), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
??xtable
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
print("2")
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
View(addtorow_models_pub_inv)
addtorow_models_pub_inv$pos <- list(0)
addtorow_models_pub_inv$command <- c("\\hline
\\multicolumn{13}{c}{Variable dependiente: Logaritmo del PIB per cápita}                                                                                                                                                                                                                                        \\ \\hline
&      & \\multicolumn{3}{c}{OLS}                      &                          & \\multicolumn{3}{c}{FMOLS}                         &                                                 & \\multicolumn{3}{c}{CCR}                        \\ \\cline{3-5} \\cline{7-9} \\cline{11-13}
\\multirow{-2}{*}{Variables}                            &      & Lineal      & Cuadrática     & Cúbica        & \\multicolumn{1}{c}{}     & Lineal          & Cuadrática     & Cúbica         & \\multicolumn{1}{c}{}                            & Lineal       & Cuadrática     & Cúbica         \\ \\hline\\hline
")
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
addtorow_models_pub_inv$command <- c("\\hline
\\multicolumn{13}{c}{Variable dependiente: Logaritmo del PIB per cápita}                                                                                                                                                                                                                                        \\\ \\hline
&      & \\multicolumn{3}{c}{OLS}                      &                          & \\multicolumn{3}{c}{FMOLS}                         &                                                 & \\multicolumn{3}{c}{CCR}                        \\\ \\cline{3-5} \\cline{7-9} \\cline{11-13}
\\multirow{-2}{*}{Variables}                            &      & Lineal      & Cuadrática     & Cúbica        & \\multicolumn{1}{c}{}     & Lineal          & Cuadrática     & Cúbica         & \\multicolumn{1}{c}{}                            & Lineal       & Cuadrática     & Cúbica         \\\ \\hline\\hline
")
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv , include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), type="latex", include.rownames = FALSE, include.colnames = FALSE )
print(xtable(models_pub_inv), include.rownames = FALSE, include.colnames = FALSE, sanitize.text.function = function(x){x} )
print(xtable(models_pub_inv), add.to.row = addtorow_models_pub_inv, include.rownames = FALSE, include.colnames = FALSE, sanitize.text.function = function(x){x} )
